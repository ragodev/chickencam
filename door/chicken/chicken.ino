// GET THE SUNSET AND SUNRISE TIMES FROM RUNNING
//   go run sunset.go times
// AND COPY AND PASTE HERE
unsigned long sunset[201] = {10,10461,96782,183105,269428,355752,442077,528404,614731,701059,787389,873719,960051,1046384,1132718,1219054,1305390,1391728,1478068,1564408,1650750,1737094,1823439,1909785,1996133,2082482,2168833,2255186,2341540,2427896,2514253,2600612,2686973,2773335,2859700,2946066,3032433,3118803,3205174,3291547,3377922,3464299,3550678,3637058,3723441,3809825,3896212,3982600,4068990,4155382,4241776,4328172,4414570,4500970,4587372,4673776,4760181,4846589,4932999,5019410,5105824,5192239,5278656,5365075,5451496,5537919,5624343,5710770,5797198,5883627,5970059,6056492,6142926,6229363,6315801,6402240,6488681,6575123,6661567,6748012,6834458,6920906,7007355,7093805,7180256,7266708,7353161,7439615,7526071,7612527,7698983,7785441,7871900,7958359,8044818,8131279,8217740,8304201,8390663,8477125,8563588,8650051,8736514,8822977,8909441,8995905,9082369,9168833,9255297,9341761,9428225,9514688,9601152,9687616,9774080,9860543,9947006,10033469,10119932,10206394,10292856,10379318,10465780,10552241,10638702,10725163,10811623,10898083,10984542,11071001,11157460,11243918,11330376,11416833,11503291,11589747,11676204,11762660,11849115,11935570,12022025,12108480,12194934,12281388,12367841,12454294,12540747,12627200,12713652,12800104,12886556,12973007,13059458,13145909,13232360,13318811,13405261,13491712,13578162,13664612,13751062,13837512,13923962,14010411,14096861,14183311,14269760,14356210,14442660,14529109,14615559,14702008,14788458,14874908,14961358,15047808,15134258,15220708,15307158,15393608,15480059,15566509,15652960,15739410,15825861,15912312,15998763,16085215,16171666,16258117,16344569,16431020,16517472,16603924,16690375,16776827,16863279,16949731,17036183,17122635,17209087};
unsigned long sunrise[200] = {120,52697,139151,225605,312059,398514,484969,571424,657880,744337,830794,917251,1003708,1090166,1176624,1263083,1349542,1436001,1522461,1608921,1695381,1781841,1868302,1954762,2041223,2127684,2214146,2300607,2387068,2473530,2559991,2646452,2732913,2819374,2905835,2992296,3078756,3165216,3251676,3338135,3424594,3511053,3597510,3683968,3770425,3856881,3943336,4029790,4116244,4202697,4289149,4375600,4462050,4548499,4634947,4721394,4807839,4894284,4980727,5067168,5153609,5240048,5326485,5412921,5499356,5585789,5672220,5758650,5845078,5931504,6017929,6104352,6190773,6277192,6363610,6450026,6536439,6622852,6709262,6795670,6882077,6968481,7054884,7141284,7227683,7314080,7400475,7486868,7573260,7659649,7746036,7832422,7918805,8005187,8091567,8177945,8264321,8350696,8437068,8523439,8609808,8696175,8782541,8868904,8955267,9041627,9127986,9214343,9300698,9387052,9473405,9559755,9646105,9732453,9818799,9905144,9991487,10077830,10164170,10250510,10336848,10423185,10509521,10595855,10682188,10768520,10854851,10941181,11027510,11113838,11200165,11286491,11372816,11459140,11545463,11631785,11718107,11804427,11890747,11977067,12063385,12149703,12236021,12322338,12408654,12494970,12581285,12667600,12753914,12840228,12926542,13012856,13099169,13185482,13271794,13358107,13444420,13530732,13617044,13703356,13789669,13875981,13962293,14048606,14134919,14221231,14307544,14393858,14480171,14566485,14652799,14739113,14825428,14911743,14998059,15084375,15170692,15257009,15343327,15429646,15515965,15602284,15688605,15774926,15861248,15947570,16033894,16120218,16206543,16292869,16379196,16465524,16551853,16638183,16724514,16810846,16897179,16983513,17069848,17156184};

unsigned long currentTime;
unsigned long timeTracker;

void setup()
  {
    
  Serial.begin (9600);
  pinMode(2,OUTPUT);
  pinMode(3,OUTPUT);
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  currentTime = millis()/1000;
  timeTracker = 0;
  }
  
void loop() 
 {

  delay(1000);
  if (millis()/1000+10000+timeTracker < currentTime) {
    timeTracker = currentTime; // the close has reset, carry it forward
  }
  currentTime = millis()/1000+timeTracker;
  int activateClose = 0;
  for (int i=0; i < sizeof(sunset)/sizeof(sunset[0]); i++) {
    if (currentTime > sunset[i]) {
      activateClose = 1;
      break;
    }
  }
  if (activateClose == 1) {
    sunsetActivation();
  }

  Serial.print(currentTime);
  Serial.print(" sensor:");
  int sensorValue = analogRead(1);
  Serial.println(sensorValue);
 }


void sunsetActivation() {
  Serial.println("Sunset activated!");
  for (int i=0; i < sizeof(sunset)/sizeof(sunset[0])-1; i++) {
    sunset[i] = sunset[i+1];
  } 
  digitalWrite(2, LOW);
  digitalWrite(3, LOW);
  delay(30*1000);
  
}
